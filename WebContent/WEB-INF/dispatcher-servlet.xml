<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
						
						
<!-- helloController라는 이름으로 bean객체를 생성한다. -->
<!-- spring container에 helloController의 이름을 가진 객체를 미리 생성해놓는다. -->
	<bean id="helloController" class="controller.HelloController"/> 

<!-- viewResolver을 객체생성한다. -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>				

<!-- newArticleController라는 이름으로 bean객체를 생성한다. -->
	<bean id="newArticleController" class="controller.NewArticleController"
		p:articleService-ref="articleService"/>
	
<!-- articleService라는 이름으로 bean객체를 생성한다. -->	
	<bean id="articleService" class="service.ArticleService"/>

	<bean id="orderController" class="controller.OrderController"/>

<!-- searchController라는 이름으로 bean객체를 생성한다 -->
	<bean id="searchController" class="controller.SearchController"/>
	
	
<!-- cookieController 라는 이름으로 bean객체를 생성한다-->
	<bean id="cookieController" class="controller.CookieController"/>

<!-- HeaderController bean객체를 생성한다-->
	<bean class="controller.HeaderController"/>

<!-- SearchController라는 bean객체를 생성한다. -->
	<bean class="controller.GameSearchController"
	 p:searchService-ref="searchService"/>
	<!-- p는 property, searchservice는 setSearchService메서드. -->	
	<!-- p:searchService는 setSearchService를 가리키고, 그 셋메서드에 넣는 객체는 service.SearchService 의 searchService이다.  -->

<!--  -->
	<bean id="searchService" class="service.SearchService"/>


</beans>
	